# GoReleaser v2 config. See https://goreleaser.com/2.0/
version: 2

before:
  hooks:
    - go mod tidy

builds:
  - id: gossm
    binary: gossm
    env:
      - CGO_ENABLED=0
    goos:
      - windows
      - darwin
      - linux
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w
      - -X main.gossmVersion={{.Version}}
    ignore:
      - goos: windows
        goarch: arm64
    # hooks:
    #   post:
    #     - sh -c "COSIGN_PASSWORD=$COSIGN_PASSWORD cosign sign-blob --key cosign.key --yes --output-signature dist/{{ .ProjectName }}_{{ .Version }}_{{ .Target }}.sig {{ .Path }}"

archives:
  - id: default
    formats: ['tar.gz', 'zip']
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    files:
      - LICENSE
      - README.md
      - dist/*.sig
    format_overrides:
      - goos: darwin
        formats: ['tar.gz']
      - goos: linux
        formats: ['tar.gz']
      - goos: windows
        formats: ['tar.gz', 'zip']

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

release:
  extra_files:
    - glob: dist/*.sig
  github:
    owner: glieske
    name: gossm

homebrew_casks:
  - name: gossm
    repository:
      owner: glieske
      name: homebrew-gossm
      branch: master
      token: "{{ .Env.HOMEBREW_GITHUB_API_TOKEN }}"
    commit_author:
      name: github-actions[bot]
      email: github-actions[bot]@users.noreply.github.com
    commit_msg_template: "Brew cask update for {{ .ProjectName }} version {{ .Tag }}"
    skip_upload: false

nix:
  - name: gossm
    homepage: "https://github.com/glieske/gossm"
    description: "Interactive CLI for AWS SSM Session Manager"
    license: "mit"
    repository:
      owner: glieske
      name: nix-nur
      branch: main
      token: "{{ .Env.NUR_GITHUB_TOKEN }}"
    commit_author:
      name: github-actions[bot]
      email: github-actions[bot]@users.noreply.github.com
    commit_msg_template: "Nix package update for {{ .ProjectName }} version {{ .Tag }}"

gomod:
  proxy: true
  env:
    - GOPROXY=https://proxy.golang.org,direct
    - GOSUMDB=sum.golang.org
  mod: mod

signs:
  - cmd: cosign
    certificate: "${artifact}.pem"
    artifacts: checksum
    args:
      - "sign-blob"
      - "--key=cosign.key"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes"
binary_signs:
  - cmd: cosign
    stdin: "{{ .Env.COSIGN_PASSWORD }}"
    signature: "${artifact}.cosign.sig"
    args:
      - "sign-blob"
      - "--key=cosign.key"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes"